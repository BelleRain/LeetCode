package Swordoffer.Dynamic;

/**
 * @author mxy
 * @create 2022-09-23 14:48
 */

/**
 * 青蛙跳台阶问题
 * 一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。
 * 答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。
 * 示例 1：
 * 输入：n = 2
 * 输出：2
 * 示例 2：
 * 输入：n = 7
 * 输出：21
 * 示例 3：
 * 输入：n = 0
 * 输出：1
 */
public class Offer10_2 {

    /**
     * 该题规律：n=1时 ：1
     *          n=2 时：(1,1) (2)
     *          n=3时：(1,2) (1,1,1) (2,1)
     *          n=4时：(1,1,2) (2,2) (1,2,1) (1,1,1,1) (2,1,1)
     * 发现规律了： n=4中的(1,1,2) (2,2)是从n=2中跳2台阶得到的，(1,2,1) (1,1,1,1) (2,1,1)是从n=3中跳1台阶得到的
     * 所以 n的跳法 = n-1 的跳法都跳一个台阶 + n-2的跳法都跳两个台阶
     * 所以 f(n) =f(n-1)+f(n-2)
     */

    /**
     * 写法一：
     * @param n
     * @return
     */
    //public int numWays(int n) {
    //    if (n < 2) return 1;
    //    int a = 1,b = 1,sum = 2;
    //    for (int i = 3; i <= n; i++) {
    //        a = b;
    //        b = sum;
    //        sum = (a+b)%1000000007;
    //    }
    //    return sum;
    //}

    /**
     * 写法二：
     * 解题思路：
     * 此类求 多少种可能性 的题目一般都有 递推性质 ，即 f(n)和 f(n-1)…f(1) 之间是有联系的。
     *
     * 设跳上 n 级台阶有 f(n) 种跳法。在所有跳法中，青蛙的最后一步只有两种情况： 跳上 1 级或 2 级台阶。
     *      当为 1 级台阶： 剩 n-1 个台阶，此情况共有 f(n-1) 种跳法；
     *      当为 2 级台阶： 剩 n-2 个台阶，此情况共有 f(n-2) 种跳法。
     *     f(n) 为以上两种情况之和，即 f(n)=f(n-1)+f(n-2) ，以上递推性质为斐波那契数列。
     * 本题可转化为 求斐波那契数列第 n 项的值 ，与 面试题10-I. 斐波那契数列 等价，唯一的不同在于起始数字不同。
     *      青蛙跳台阶问题： f(0)=1 , f(1)=1 , f(2)=2 ；
     *      斐波那契数列问题： f(0)=0 , f(1)=1 , f(2)=1 。
     *
     * 经测试：此处f(0)=1,符合题目要求；若添加条件 if (n == 0) return 0;则会报错
     *
     */
    public int numWays(int n) {
        int a = 1,b = 1,sum = a+b;
        for (int i = 0; i < n; i++) {
            sum = (a+b)%1000000007;
            a=b;
            b=sum;
        }
        return a;
    }

}












































